============ global var ================
n := symbol type: 2; data type: 2; initValue: n: 6

int_array_b := symbol type: 1; data type: 2; initValue: int_array_b: 7

int_array_a := symbol type: 1; data type: 2; initValue: int_array_a: 1

============ imm value ================
ImmValue_2: {0, 0, 0, 0, 0, 0}
============ functions ================
----------- funcDef -----------
int_array_add() => 0:
----------- paramVars -----------
----------- localVars -----------
i := symbol type: 1; data type: 2; initValue: 0

int_array_c := symbol type: 1; data type: 2; initValue: ImmValue_2: {0, 0, 0, 0, 0, 0}

----------- tempVars ------------
t_5:= symbol type: TEMP VAR; data type: 2
t_4:= symbol type: TEMP VAR; data type: 2
t_0:= symbol type: TEMP VAR; data type: 1
t_1:= symbol type: TEMP VAR; data type: 2
t_2:= symbol type: TEMP VAR; data type: 2
t_3:= symbol type: TEMP VAR; data type: 2
----------- Codes ------------
int_array_add:
	int_array_c = ImmValue_2: {0, 0, 0, 0, 0, 0};
	i = 0;
L_1_int_array_add:
	t_0 = i < n
	beqz t_0 L_0_int_array_add
	t_1 = int_array_a[i];
	t_2 = int_array_b[i];
	t_3 = t_1 + t_2;
	int_array_c[i] = t_3;
	t_4 = int_array_c[i];
	addparam t_4;
	call print_int, frame size: 40; 
	t_5 = i + 1;
	t_6 <= i;
	t_6 = t_5;
	goto L_1_int_array_add
L_0_int_array_add:
	return ;

----------- funcDef -----------
main() => 2:
----------- paramVars -----------
----------- localVars -----------
----------- tempVars ------------
----------- Codes ------------
main:
	call int_array_add, frame size: 8; 
	return 0;

