============ global var ================
============ imm value ================
============ functions ================
----------- funcDef -----------
fibonacci(2) => 2:
----------- paramVars -----------
n := symbol type: 0; data type: 2
----------- localVars -----------
c := symbol type: 1; data type: 2; initValue: 0

i := symbol type: 1; data type: 2; initValue: 0

b := symbol type: 1; data type: 2; initValue: 1

a := symbol type: 1; data type: 2; initValue: 0

----------- tempVars ------------
t_5:= symbol type: TEMP VAR; data type: 2
t_0:= symbol type: TEMP VAR; data type: 1
t_1:= symbol type: TEMP VAR; data type: 2
----------- Codes ------------
fibonacci:
	n =  param 0;
	a = 0;
	b = 1;
	i = 0;
	c = 0;
L_1_fibonacci:
	t_0 = i < n
	beqz t_0 L_0_fibonacci
	t_1 = a + b;
	t_2 <= c;
	t_2 = t_1;
	addparam c;
	call print_int, frame size: 40; 
	t_3 <= a;
	t_3 = b;
	t_4 <= b;
	t_4 = c;
	t_5 = i + 1;
	t_6 <= i;
	t_6 = t_5;
	goto L_1_fibonacci
L_0_fibonacci:
	return ;

----------- funcDef -----------
main() => 2:
----------- paramVars -----------
----------- localVars -----------
n := symbol type: 1; data type: 2; initValue: 0

----------- tempVars ------------
t_2:= symbol type: TEMP VAR; data type: 2
t_0:= symbol type: TEMP VAR; data type: 2
----------- Codes ------------
main:
	n = 0;
	call get_int, frame size: 24; 
	t_0 =  return ;
	t_1 <= n;
	t_1 = t_0;
	addparam n;
	call fibonacci, frame size: 24; 
	t_2 =  return ;
	return 0;

